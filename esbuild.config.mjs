import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";
import path from "path";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

// 构建JavaScript
const jsContext = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
});

// 构建CSS - 使用自定义合并函数而不是esbuild

        // 合并所有CSS文件到styles.css
        async function buildCSS() {
            const cssFiles = [
                "styles/base.css",
                "styles/components/TopSummary.css",
                "styles/components/TagPanel.css",
                "styles/components/AssetManagerView.css",
                "styles/components/AssetCard.css",
                "styles/components/modals/AssetFormModal.css",
                "styles/components/settings/LacCostSetSettingTab.css"
            ];
	
	let combinedCSS = "";
	for (const file of cssFiles) {
		if (fs.existsSync(file)) {
			combinedCSS += fs.readFileSync(file, 'utf8') + "\n";
		}
	}
	
	fs.writeFileSync("styles.css", combinedCSS);
	console.log("CSS files combined into styles.css");
}

if (prod) {
	await jsContext.rebuild();
	await buildCSS();
	process.exit(0);
} else {
	await jsContext.watch();
	await buildCSS();
	
	// 监听CSS文件变化
	const chokidar = await import('chokidar');
	chokidar.watch('styles/**/*.css').on('change', () => {
		buildCSS();
	});
}
